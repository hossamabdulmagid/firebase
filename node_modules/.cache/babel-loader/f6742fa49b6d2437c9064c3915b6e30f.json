{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Hossam\\\\Desktop\\\\firebase\\\\reactnote\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // make async call to database \n    const firestore = getFirestore();\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstname: 'Hossam',\n      authorLastname: 'Abdulmagid',\n      authorId: 12345,\n      createdAt: new Date()\n    })).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Hossam\\desktop\\firebase\\reactnote\\src\\store\\action\\projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","collection","add","authorFirstname","authorLastname","authorId","createdAt","Date","then","type","catch","err"],"mappings":";;;;;;AAAA,OAAO,MAAOA,aAAa,GAAIC,OAAD,IAAY;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAoB;AAACC,IAAAA,WAAD;AAAeC,IAAAA;AAAf,GAApB,KAAqD;AACxD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOP,OADP;AAEIQ,MAAAA,eAAe,EAAC,QAFpB;AAGIC,MAAAA,cAAc,EAAC,YAHnB;AAIIC,MAAAA,QAAQ,EAAC,KAJb;AAKIC,MAAAA,SAAS,EAAC,IAAIC,IAAJ;AALd,QAMGC,IANH,CAMQ,MAAI;AACRZ,MAAAA,QAAQ,CAAC;AAACa,QAAAA,IAAI,EAAC,gBAAN;AAAuBd,QAAAA;AAAvB,OAAD,CAAR;AAEH,KATD,EASGe,KATH,CASUC,GAAD,IAAO;AACZf,MAAAA,QAAQ,CAAC;AAACa,QAAAA,IAAI,EAAE,sBAAP;AAA8BE,QAAAA;AAA9B,OAAD,CAAR;AACH,KAXD;AAYH,GAfD;AAgBH,CAjBM","sourcesContent":["export const  createProject = (project) =>{\r\n    return (dispatch, getState,{getFirebase , getFirestore}) => {\r\n        // make async call to database \r\n        const firestore = getFirestore ();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstname:'Hossam',\r\n            authorLastname:'Abdulmagid',\r\n            authorId:12345,\r\n            createdAt:new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project });\r\n\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR',err});\r\n        })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}