[debug] [2019-10-03T14:10:35.846Z] ----------------------------------------------------------------------
[debug] [2019-10-03T14:10:35.848Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Hossam\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2019-10-03T14:10:35.849Z] CLI Version:   7.4.0
[debug] [2019-10-03T14:10:35.849Z] Platform:      win32
[debug] [2019-10-03T14:10:35.849Z] Node Version:  v10.16.0
[debug] [2019-10-03T14:10:35.849Z] Time:          Thu Oct 03 2019 16:10:35 GMT+0200 (Eastern European Standard Time)
[debug] [2019-10-03T14:10:35.849Z] ----------------------------------------------------------------------
[debug] 
[debug] [2019-10-03T14:10:35.859Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-10-03T14:10:35.860Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\Hossam\Desktop\firebase\reactnote

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2019-10-03T14:10:51.679Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2019-10-03T14:10:51.679Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2019-10-03T14:10:52.094Z] <<< HTTP RESPONSE 200
[debug] [2019-10-03T14:10:52.113Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2019-10-03T14:10:52.774Z] <<< HTTP RESPONSE 200
[info] i  Using project sawsaw-project (sawsaw-project)
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2019-10-03T14:11:00.847Z] >>> HTTP REQUEST GET https://sawsaw-project.firebaseio.com/.settings/rules.json  
 
[debug] [2019-10-03T14:11:02.001Z] <<< HTTP RESPONSE 200
[info] +  Database Rules for sawsaw-project have been downloaded to build.
[info] Future modifications to build will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2019-10-03T14:11:02.006Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-10-03T14:11:02.007Z] > authorizing via signed-in user
[debug] [2019-10-03T14:11:02.007Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/sawsaw-project  
 
[debug] [2019-10-03T14:11:02.393Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-10-03T14:11:05.961Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/sawsaw-project/releases?pageSize=10&pageToken=  
 
[debug] [2019-10-03T14:11:08.338Z] <<< HTTP RESPONSE 200
[debug] [2019-10-03T14:11:08.339Z] Found ruleset: projects/sawsaw-project/rulesets/8a119f19-b81c-4460-bbde-4c60a46be97f
[debug] [2019-10-03T14:11:08.340Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/sawsaw-project/rulesets/8a119f19-b81c-4460-bbde-4c60a46be97f  
 
[debug] [2019-10-03T14:11:09.318Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-10-03T14:11:12.112Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/sawsaw-project/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2019-10-03T14:11:12.112Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/sawsaw-project/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2019-10-03T14:11:12.753Z] <<< HTTP RESPONSE 200
[debug] [2019-10-03T14:11:12.768Z] <<< HTTP RESPONSE 200
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2019-10-03T14:11:12.777Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-10-03T14:11:12.778Z] > authorizing via signed-in user
[debug] [2019-10-03T14:11:12.779Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/sawsaw-project  
 
[debug] [2019-10-03T14:11:13.152Z] <<< HTTP RESPONSE 200
[debug] [2019-10-03T14:11:13.158Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/sawsaw-project/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2019-10-03T14:11:13.158Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/sawsaw-project/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2019-10-03T14:11:14.380Z] <<< HTTP RESPONSE 200
[debug] [2019-10-03T14:11:14.465Z] <<< HTTP RESPONSE 200
[info] +  Wrote functions/package.json
[info] +  Wrote functions/index.js
[info] +  Wrote functions/.gitignore
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2019-10-03T14:11:59.258Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2019-10-03T14:11:59.624Z] <<< HTTP RESPONSE 200
[debug] [2019-10-03T14:12:00.006Z] Error: ENOENT: no such file or directory, open 'C:\Users\Hossam\Desktop\firebase\reactnote\build\index.html'
    at Object.openSync (fs.js:443:3)
    at Object.writeFileSync (fs.js:1194:35)
    at Object.createFileSync (C:\Users\Hossam\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\fs-extra\lib\ensure\file.js:34:6)
    at Config.writeProjectFile (C:\Users\Hossam\AppData\Roaming\npm\node_modules\firebase-tools\lib\config.js:178:8)
    at C:\Users\Hossam\AppData\Roaming\npm\node_modules\firebase-tools\lib\config.js:197:18
    at process._tickCallback (internal/process/next_tick.js:68:7)
[error] 
[error] Error: An unexpected error has occurred.
